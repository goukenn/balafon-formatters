{
    "settings": {
        "noSpaceJoin": true
    },
    "repository": {

        "string": {
            "begin": "(\"|')",
            "end": "\\$1",
            "name": "string.definition",
            "allowMultiline": false,
            "tokenID": "string",
            "patterns": [
                {
                    "match": "\\\\.",
                    "name":"escaped.char"
                }
            ]
        },
        "string-named": {
            "begin": "(\"|')",
            "end": "\\$1",
            "name": "string.definition",
            "allowMultiline": false,
            "tokenID": "string",
            "patterns": [
                {
                    "match":"(?i)\\bbondje\\b",
                    "name":"author.name",
                    "transform":["upperCase"]
                },
                {
                    "match": "\\\\.",
                    "name":"escaped.char"
                }
            ]
        },
        "url": {
            "match":"(?i)(?<scheme>(?:ftp|http(?:s)|[a-z]+)):(?:\\/\\/|\\/|)(?<path>(?:\\/|\\.\\.(?:\\/)?|\\.(?:\\/)?)[^\\/\\)\\(]+(?:\\/|\/[^\\/\\)\\()\\;]+))(?:;(?<queryo>[^\\?\\#]+))?(?:\\?(?<query>[^\\#]+))?(?:(?<anchor>#.+))?",
            "name": "url.text", 
            "tokenID": "url",
            "patterns": [
                {
                    "match": "\\\\.",
                    "name":"escaped.char"
                }
            ]
        },
        "tag-definition": {
            "begin": "\\<(\\b[\\w]+\\b)",
            "end": "(\\/|\\<\\/$1\\s*)?\\>",
            "name": "tag.definition.html",
            "tokenID": "tagname", 
            "isBlock": false,
            "block": {
                "start": "<$1",
                "end": "\\<\\/$1\\>"
            },
           "endCaptures": {
                "0": {
                    "comment": "remove not used white space",
                    "match": "<\\/([\\w]+)\\s+\\>",
                    "replaceWith": "\\<\\/$1\\>"
                }
            },
            "patterns": [
                {
                    "include": "#end-tag"
                },
                {
                    "match": "(?=\\<\\/[\\w]+\\>)",
                    "name": "end.tag.block.html",
                    "tokenID":"endtag.block"
                },
                {
                    "match": "(?:\\>)",
                    "name": "start.html.end.block.html",
                    "lineFeed":false,
                    "updateParentProps": {
                        "isBlock": true
                    }
                },
                {
                    "match": "(\\/\\>)",
                    "name": "start.empty.html.block.html",
                    "tokenID":"endtag.block",
                    "lineFeed": true,
                    "updateParentProps": {
                        "isBlock": true
                    }
                },
                {
                    "include":"#html-attribute"
                },
                {
                    "include":"#function-html-attribute"
                },
                {
                    "include":"#bracket-html-attribute"
                },
                {
                    "include": "#string"
                },
                {
                    "include": "#comment"
                },
                {
                    "include": "#operator"
                }
                
            ]
        },
        "empty-tag": {
            "begin": "\\<([\\w]+)\\s*\\/\\>",
            "end": "(?:>)",
            "lineFeed": true,
            "tokenID": "empty.tag",
            "name": "empty.tag.definition.html"
        },
        "operator": {
            "match": "\\s*(\\+|\\*|-|%|=)\\s*",
            "name": "tag.operator.html",
            "tokenID": "tag.operator",
            "replaceWith": "$1",
            "nextTrimWhiteSpace": true
        },
        "comment": {
            "begin": "\\<\\!--",
            "end": "--\\>",
            "tokenID": "comment",
            "name": "comment.html",
            "lineFeed": true
        },
        "doctype": {
            "begin": "\\<!DOCTYPE",
            "end": "\\>",
            "tokenID": "doctype",
            "name": "constant.doctype.html",
            "lineFeed": true,
            "patterns": [
                {
                    "include": "#string"
                },
                {
                    "include": "#url"
                }
            ]
        },
        "processor-expression": {
            "begin": "\\<\\?[\\w]+",
            "end": "\\?>",
            "tokenID": "processor",
            "name": "constant.processor.html",
            "lineFeed": true,
            "patterns": [
                {
                    "include": "#string"
                },
                {
                    "include": "#url"
                }
            ]
        },
        "end-tag": {
            "begin": "\\<\\/[\\w]+(\\s+|$)",
            "end": "\\>",
            "tokenID": "detect-bad-end.tag",
            "name": "end.tag.definition.html",
            "comment": "detect non well formed end tags",
            "nextTrimWhiteSpace": true,
            "transformToken": true,
            "endCaptures": {
                "0": {
                    "nextTrimWhiteSpace": true
                }
            }
        },
        "html-attribute":{
            "match":"(\\*)?\\b[\\w]+\\b",
            "name":"tag.attribute.html"
        },
        "bracket-html-attribute":{
            "match":"\\[\\s*\\b[\\w]+\\b\\*\\]",
            "name":"tag.bracket.attribute.html"
        },
        "function-html-attribute":{
            "match":"\\[\\s*\\b[\\w]+\\b\\*\\]",
            "name":"tag.function.attribute.html"
        }
    },
    "patterns": [
        {
            "begin":"\\<\\b([\\w]+)\\b\\s*",
            "end":"(\\s*\\/\\>|\\<\\/$1\\s*>)",
            "name":"global.empty.tag",
            "endCaptures":{
                "0":{
                    "name":"html.end.tag_definition",
                    "transform":["trim"],
                    "patterns":[
                        {
                            "match":"^\\s*\\/\\>",
                            "name":"close.tag",
                            "replaceWith":"></$1>",
                            "replaceWithCondition":{
                                "check": "$1",
                                "operator":"!=",
                                "match": "br|hr|img|input|source|link|meta|base|col|embed|param|track|wbr"
                            },
                            "updateParentProps":{
                                "isBlock":false
                            }
                            
                        },
                        {
                            "match":"\\<\\/\\b[\\w]+\\b\\>",
                            "name": "end.tag"
                            
                        }
                    ]
                }
            },
            "patterns":[
                {
                    "begin":"([\\w\\-]+)\\s*",
                    "end":"(?=([=]|>|\\s|$))",
                    "name":"attribute.html",
                    "tokenID":"attribute",
                    "comment":"detect attribute definition-primary",
                    "beginCaptures":{
                        "0":{
                            "transform":"trim"
                        }
                    }
                },
                {
                    "begin":"\\s*=\\s*",
                    "end":"(?=[\\w]|\\/|\\>)",
                    "name":"operator.attribute.affectation.html",
                    "beginCaptures":{
                        "0":{
                            "transform":"trim"
                        }
                    },
                    "patterns":[
                        {"include":"#string"}
                    ]
                },{
                    "begin":"\\>",
                    "end":"(?=\\<\\/)",
                    "name":"inner.html",
                    "comment":"Detect inner content.",
                    "patterns":[
                        { "include":"#string" },
                        { "include":"#url" }
                     
                    ]
                }

            ]
           
        },
        {
            "include": "#string-named"
        },
        {
            "include": "#string"
        },
        {
            "include": "#url"
        },
        {
            "include": "#tag-definition_"
        },
        {
            "include": "#comment"
        },
        {
            "include": "#doctype"
        },
        {
            "include": "#end-tag"
        },
        {
            "include": "#processor-expression"
        }
    ],


    "scopeName": "source.text.html"
}